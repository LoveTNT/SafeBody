package com.example.t;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.widget.Toast;

public class MyDatabaseHelper extends SQLiteOpenHelper {

	public static final String CREATE_BOOK="create table book("
	+"id integer primary key autoincrement,"
	+"author text,"
	+"price real,"
	+"pages integer,"
	+"name text)";
	
	
	
	private Context mContext;  -------------------------------
	
	public MyDatabaseHelper(Context context, String name,
			CursorFactory factory, int version) {
		super(context, name, factory, version);
		mContext=context;-----------------------------
	}

	@Override
	public void onCreate(SQLiteDatabase db) {
    db.execSQL(CREATE_BOOK);  -----------------------------
    Toast.makeText(mContext, "create succeeded",Toast.LENGTH_LONG).show();
	}

	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

	}

}
package com.example.t;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;


public class MainActivity extends Activity {
  
	private MyDatabaseHelper dbHelper;
    
	@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        dbHelper=new MyDatabaseHelper(getApplication(), "Book.db", null, 1);-----------------------------
        Button createButton=(Button) findViewById(R.id.create_database);
       
        createButton.setOnClickListener(new OnClickListener(
        		) {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				dbHelper.getWritableDatabase();
			}
		});
    
    }
 
    
}

SQLite数据库存储

SQLiteOpenHelper 帮
助类，借助这个类就可以非常简单地对数据库进行创建和升级


 SQLiteOpenHelper 的基本用法进行介绍



 SQLiteOpenHelper 是一个抽象类

SQLiteOpenHelper 中有
两个抽象方法，分别是
     onCreate()和
     onUpgrade()
后分别在这两
个方法中去实现创建、升级数据库的逻辑。


SQLiteOpenHelper 中 还 有 两 个 非 常 重 要 的 实 例 方 法 ， getReadableDatabase() 和
getWritableDatabase()。



SQLiteOpenHelper 中有两个构造方法可供重写，一般使用参数少一点的那个构造方法即
可。这个构造方法中接收四个参数，第一个参数是 Context，这个没什么好说的，必须要有
它才能对数据库进行操作。第二个参数是数据库名，创建数据库时使用的就是这里指定的名
称。第三个参数允许我们在查询数据的时候返回一个自定义的 Cursor，一般都是传入 null。
第 四 个 参 数 表 示 当 前 数 据 库 的 版 本 号 



数据库文件会存放在/data/data/<package  name>/databases/目录下

adb 是 Android SDK 中自带的一个调试工具，使用这个工具可以直接对连接在电脑上的
手机或模拟器进行调试操作。它存放在 sdk 的 platform-tools 目录下

是 Windows 系统，可以右击我的电脑→属性→高级→环境变量，然后在
系统变量里找到 Path 并点击编辑，将 platform-tools 目录配置进去

 cd 命令进行到/data/data/com.example.databasetest/databases/目录下，并使用 ls
命令查看到该目录里的文件
 sqlite 命令来打开数据库了，只需要键入 sqlite3，后面加上数据库
名即可，








